<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AskEmailID" xml:space="preserve">
    <value>Please enter valid email address</value>
  </data>
  <data name="AskGoalCategory" xml:space="preserve">
    <value>Got it. What is the category?</value>
  </data>
  <data name="AskGoalName" xml:space="preserve">
    <value>Sure. What is the Goal name?</value>
  </data>
  <data name="AskGoalType" xml:space="preserve">
    <value>For which goal is this task for?</value>
  </data>
  <data name="AskPassword" xml:space="preserve">
    <value>Please enter password</value>
  </data>
  <data name="AskTaskDescription" xml:space="preserve">
    <value>Describe the task or tell me what you need to do in the task?</value>
  </data>
  <data name="AskTaskName" xml:space="preserve">
    <value>What do you want to call the task?</value>
  </data>
  <data name="AskTaskPriority" xml:space="preserve">
    <value>What is the priority of this task for you?</value>
  </data>
  <data name="AskTypeOfTask" xml:space="preserve">
    <value>What type of task is it?</value>
  </data>
  <data name="ConfirmCommon" xml:space="preserve">
    <value>Do you have any more questions for me?</value>
  </data>
  <data name="ConfirmCreateGoal" xml:space="preserve">
    <value>Do you want me to create another goal?</value>
  </data>
  <data name="ConfirmCreateTask" xml:space="preserve">
    <value>Do you want me to create another task?</value>
  </data>
  <data name="ConfirmDelete" xml:space="preserve">
    <value>Are you sure you want to delete this task?</value>
  </data>
  <data name="ConfirmGeneral" xml:space="preserve">
    <value>Is there anything else you’re curious about?</value>
  </data>
  <data name="ConfirmGetTasks" xml:space="preserve">
    <value>Do you have any more questions about your schedule?</value>
  </data>
  <data name="ConfirmImages" xml:space="preserve">
    <value>Do you have any more image queries for me?</value>
  </data>
  <data name="ConfirmNews" xml:space="preserve">
    <value>Do you have any more news-related questions for me?</value>
  </data>
  <data name="ConfirmReminder" xml:space="preserve">
    <value>Would that be in minutes, hours, or days?</value>
  </data>
  <data name="CreateGoals" xml:space="preserve">
    <value>Create a Goal</value>
  </data>
  <data name="CreateTasks" xml:space="preserve">
    <value>Create a Task</value>
  </data>
  <data name="DeleteTaskName" xml:space="preserve">
    <value>Okay. Can you give me the name of the task you want to delete?</value>
  </data>
  <data name="EditTaskInput" xml:space="preserve">
    <value>Sure! How should we proceed?
You can say:
Create a new task
Get my task
Edit a task
Delete a task</value>
  </data>
  <data name="EditTaskName" xml:space="preserve">
    <value>Okay. Please enter the new task name you prefer</value>
  </data>
  <data name="EditTaskOption" xml:space="preserve">
    <value>Sure! What kind of change would you like to make?</value>
  </data>
  <data name="EditTaskPriority" xml:space="preserve">
    <value>Please select the new priority level</value>
  </data>
  <data name="GetTaskInput" xml:space="preserve">
    <value>What can I help you with?
</value>
  </data>
  <data name="GetTasks" xml:space="preserve">
    <value>Calendar</value>
  </data>
  <data name="GoalEmpty" xml:space="preserve">
    <value>Oops! You forgot to give your &lt;b&gt;Goal&lt;/b&gt; a name. 
Please type a name that's easy to remember.</value>
  </data>
  <data name="GoalSuccessfullyCreated" xml:space="preserve">
    <value>Your goal has been created now</value>
  </data>
  <data name="ReminderClosestMessage" xml:space="preserve">
    <value>The closest setting that I have for the reminder is {0}. Are you happy with this?</value>
  </data>
  <data name="ReminderHappyMessage" xml:space="preserve">
    <value>Do you want to continue?</value>
  </data>
  <data name="NoTaskFound" xml:space="preserve">
    <value>Task not found, try again</value>
  </data>
  <data name="Priority" xml:space="preserve">
    <value>Priority</value>
  </data>
  <data name="Reschedule" xml:space="preserve">
    <value>Reschedule</value>
  </data>
  <data name="SearchTaskName" xml:space="preserve">
    <value>No problem. Just enter the name of the task.</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="SignInMessage" xml:space="preserve">
    <value>You need to be signed in to be able to use TaskSpur. I have opened another window for you to sign in.</value>
  </data>
  <data name="SignInOption" xml:space="preserve">
    <value>Do you need any guidance or help?</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="SuccessfulLogin" xml:space="preserve">
    <value>You are successfully logged in!</value>
  </data>
  <data name="SuccessfulRegistration" xml:space="preserve">
    <value>Please sign in after registering and reseting password</value>
  </data>
  <data name="TaskConfirmDate" xml:space="preserve">
    <value>You've chosen {0}. Is this correct?</value>
  </data>
  <data name="TaskEmpty" xml:space="preserve">
    <value>Oops! You forgot to give your &lt;b&gt;Task&lt;/b&gt; a name. 
Please type a name that's easy to remember.</value>
  </data>
  <data name="TaskEndDate" xml:space="preserve">
    <value>When does the task need to end?</value>
  </data>
  <data name="TaskEndTime" xml:space="preserve">
    <value>What time does the task need to end?</value>
  </data>
  <data name="TaskInvalidDate" xml:space="preserve">
    <value>This date does not seem valid to me. Can you try a different date, for example today, next week or 23 Aug?</value>
  </data>
  <data name="TaskName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="TaskRemindMe" xml:space="preserve">
    <value>Do you want me to remind you of this task?</value>
  </data>
  <data name="TaskRemindTime" xml:space="preserve">
    <value>How long before the task would you like to be reminded? You can set task reminders such as 15 minutes, 2 hours, or 3 days before.</value>
  </data>
  <data name="Tasks" xml:space="preserve">
    <value>Tasks</value>
  </data>
  <data name="TaskSpurInfo" xml:space="preserve">
    <value>What is TaskSpur?</value>
  </data>
  <data name="TaskStartDate" xml:space="preserve">
    <value>When does the task need to start?</value>
  </data>
  <data name="TaskStartTime" xml:space="preserve">
    <value>Sure! Do you know what time?
</value>
  </data>
  <data name="TaskValidTime" xml:space="preserve">
    <value>This time does not seem valid to me. Can you try a different time, for example 3 pm or 10 am?</value>
  </data>
  <data name="DeleteGoalName" xml:space="preserve">
    <value>Okay. Can you give me the name of the goal you want to delete?</value>
  </data>
  <data name="Goals" xml:space="preserve">
    <value>Goals</value>
  </data>
  <data name="NoGoalFound" xml:space="preserve">
    <value>Goal not found, try again</value>
  </data>
  <data name="EditGoalName" xml:space="preserve">
    <value>Right away! What's the name of this goal</value>
  </data>
  <data name="GoalCategory" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="TaskSpurChoose" xml:space="preserve">
    <value>Choose</value>
  </data>
  <data name="ConfirmGoalDelete" xml:space="preserve">
    <value>Are you sure you want to delete this goal?</value>
  </data>
  <data name="EditGoalCategory" xml:space="preserve">
    <value>Which category you want to change to?</value>
  </data>
  <data name="EditGoalNewname" xml:space="preserve">
    <value>Okay. Please enter the new name you prefer</value>
  </data>
  <data name="CannotFindGoal" xml:space="preserve">
    <value>Still cannot find the goal?</value>
  </data>
  <data name="CannotFindTask" xml:space="preserve">
    <value>Still cannot find the task?</value>
  </data>
  <data name="GoalNotDeletable" xml:space="preserve">
    <value>System goal - not deletable</value>
  </data>
  <data name="GoalNotEditable" xml:space="preserve">
    <value>System goal - not editable</value>
  </data>
  <data name="ConfirmTaskName" xml:space="preserve">
    <value>Are you happy with this task name?</value>
  </data>
  <data name="SetupTask" xml:space="preserve">
    <value>It seems like you are trying to set up a task. Let's start with the name!</value>
  </data>
  <data name="String2" xml:space="preserve">
    <value />
  </data>
  <data name="ConfirmAMPM" xml:space="preserve">
    <value>Sure! {0} AM or {1} PM</value>
  </data>
  <data name="TaskDateAndTime" xml:space="preserve">
    <value>Sure! Do you know when you want to do this?</value>
  </data>
  <data name="TaskTime" xml:space="preserve">
    <value>Great! What time?</value>
  </data>
  <data name="ConfirmTask" xml:space="preserve">
    <value>Do you want to create a task?</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="ConfirmRemind" xml:space="preserve">
    <value>Do you want to have the same reminder? {0} before the task</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="NoGoals" xml:space="preserve">
    <value>Sorry, you don't have any goals under that Status</value>
  </data>
</root>